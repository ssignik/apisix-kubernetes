---
# Source: apisix-ingress-controller/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-ingress-controller
  namespace: ingress-apisix
  annotations:
  labels:
    
    app.kubernetes.io/name: apisix-ingress-controller
    app.kubernetes.io/instance: apisix-ingress-controller
    app.kubernetes.io/version: "1.8.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: apisix-ingress-controller
      app.kubernetes.io/instance: apisix-ingress-controller
  template:
    metadata:
      annotations:
        checksum/config: e9e39702c6945485fe4961cace7df198706e3989e55919d49f4e7d673ae3eaef
      labels:
        
        app.kubernetes.io/name: apisix-ingress-controller
        app.kubernetes.io/instance: apisix-ingress-controller
    spec:
      serviceAccountName: apisix-ingress-controller
      securityContext:
        {}
      volumes:
        - name: configuration
          configMap:
            name: apisix-ingress-controller-configmap
            items:
              - key: config.yaml
                path: config.yaml
      
      
      initContainers:
        - name: wait-apisix-admin
          image: busybox:1.28
          
          command: ['sh', '-c', "until nc -z apisix-admin.ingress-apisix.svc.cluster.local 9180 ; do echo waiting for apisix-admin; sleep 2; done;"]
          

          securityContext:
            {}
      
      containers:
        - name: apisix-ingress-controller
          command:
            - /ingress-apisix/apisix-ingress-controller
            - ingress
            - --config-path
            - /ingress-apisix/conf/config.yaml
          securityContext:
            {}
          image: "apache/apisix-ingress-controller:1.8.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          resources:
            {}
          volumeMounts:
            - mountPath: /ingress-apisix/conf/config.yaml
              name: configuration
              subPath: config.yaml
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
